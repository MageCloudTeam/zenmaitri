{%- assign per_row = 3 -%}
{%- assign paginate_by = per_row | times: section.settings.rows_per_page -%}

{%- paginate collection.products by paginate_by -%}

<div
  id="CollectionSection"
  data-section-id="{{ section.id }}"
  data-section-type="collection-template">

  {%- if section.settings.subcollection_style == 'above' -%}
    {%- render 'subcollections', per_row: section.settings.subcollections_per_row -%}
  {%- endif -%}

  <div class="collection-filter">
    {%- assign current_filter_size = current_tags | size -%}
    <div class="collection-filter__item collection-filter__item--drawer">
      <button
        type="button"
        class="js-drawer-open-collection-filters btn btn--tertiary{% unless current_filter_size == 0 %} btn--tertiary-active{% endunless %}"
        aria-controls="FilterDrawer">
        {{ 'collections.filters.title_tags' | t }}
        {%- if current_filter_size > 0 -%}
          ({{ current_filter_size }})
        {%- endif -%}
      </button>
    </div>

    <div class="collection-filter__item collection-filter__item--count small--hide">
      {%- if section.settings.enable_collection_count -%}
        {{ 'collections.general.items_with_count' | t: count: collection.products_count }}
      {%- endif -%}
    </div>

    <div class="collection-filter__item collection-filter__item--sort">
      <div class="collection-filter__sort-container">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <label for="SortBy" class="hidden-label">{{ 'collections.sorting.title' | t }}</label>
        <select name="SortBy" id="SortBy" data-default-sortby="{{ collection.default_sort_by }}">
          <option value="title-ascending"{% if sort_by == collection.default_sort_by %} selected="selected"{% endif %}>{{ 'collections.sorting.title' | t }}</option>
          {%- for option in collection.sort_options -%}
            <option value="{{ option.value }}"{% if option.value == sort_by %} selected="selected"{% endif %}>{{ option.name }}</option>
          {%- endfor -%}
        </select>
      </div>
    </div>
  </div>

  {%- if section.settings.enable_collection_count -%}
    <p class="medium-up--hide text-center collection-mobile-count" data-scroll-to>{{ 'collections.general.items_with_count' | t: count: collection.products_count }}</p>
  {%- endif -%}

  <div
    class="grid grid--uniform collection-flex-grid {% if section.settings.mobile_flush_grid %} small--grid--flush{% endif %}"{% unless section.settings.enable_collection_count %} data-scroll-to{% endunless %}>
    {%- liquid
      assign grid_item_width = 'small--one-half medium-up--one-third'

      case per_row
        when 2
          assign grid_item_width = 'medium-up--one-half'
        when 3
          assign grid_item_width = 'small--one-half medium-up--one-third'
        when 4
          assign grid_item_width = 'small--one-half medium-up--one-quarter'
        when 5
          assign grid_item_width = 'small--one-half medium-up--one-fifth'
      endcase
    -%}

    {%- assign featured_item_image_1 = collection.metafields.featured_item_1.image | first -%}
    {%- assign featured_item_image_2 = collection.metafields.featured_item_2.image | first -%}
    {%- assign last_index = 0 -%}

    {%- for product in collection.products -%}
      {%- render 'product-grid-item', product: product, grid_item_width: grid_item_width, per_row: per_row, index: forloop.index0 -%}
      {%- assign last_index = forloop.index0 -%}
      {%- unless collection.sort_by != blank or current_filter_size > 0 -%}
        {%- if forloop.index == 3 and featured_item_image_1 != blank -%}
          {%- assign idx = forloop.index0 -%}
          {%- render 'collection-featured-item',
            image: featured_item_image_1,
            meta: collection.metafields.featured_item_1,
            left: true,
            index: idx
          -%}
          {%- style -%}
            {%- assign mobileIndex = idx | plus: 2 -%}
            .collection-featured-item[data-index="{{ idx }}"] { order: {{ idx }} }
            @media (max-width: 1000px) {
              .collection-featured-item[data-index="{{ idx }}"] { order: {{ mobileIndex }} }
            }
          {%- endstyle -%}
        {%- endif -%}
        {%- if forloop.index == 8 and featured_item_image_2 != blank -%}
          {%- assign idx = forloop.index0 -%}
          {%- render 'collection-featured-item',
            image: featured_item_image_2,
            meta: collection.metafields.featured_item_2,
            index: idx
          -%}
          {%- style -%}
            .collection-featured-item[data-index="{{ idx }}"] { order: {{ idx }} }
          {%- endstyle -%}
        {%- endif -%}
    {% endunless %}
    {%- else -%}
      <div class="grid__item">
        <p>{{ 'collections.general.no_matches' | t }}</p>
      </div>
    {%- endfor -%}

    {%- for i in (1..3) -%}
      {%- comment -%}
        Container is space-between, the below spacers prevent
        the last 2 products showing on the right or centre of
        the page.
      {%- endcomment -%}
      {%- assign last_index = last_index | plus: 1 -%}
      <div class="grid__item {{ grid_item_width }} spacer" style="order: {{ last_index }}"></div>
    {%- endfor -%}
  </div>

  {%- if section.settings.subcollection_style == 'below' -%}
    {%- render 'subcollections', per_row: section.settings.subcollections_per_row -%}
  {%- endif -%}

  {%- if paginate.pages > 1 -%}
    {%- render 'pagination', paginate: paginate -%}
  {%- endif -%}

  {%- if section.settings.description_position == 'bottom' -%}
    {%- if collection.description != blank -%}
      <hr class="hr--clear hr--small">
      <div class="rte">
        {{ collection.description }}
      </div>
      <hr class="hr--clear hr--small">
    {%- endif -%}
  {%- endif -%}

  {%- if settings.quick_shop_enable -%}
    {%- for product in collection.products -%}
      {%- render 'quick-shop-modal', product: product -%}
    {%- endfor -%}
  {%- endif -%}
</div>

{%- endpaginate -%}

{% schema %}
  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "header",
        "content": "Subcollections"
      },
      {
        "type": "paragraph",
        "content": "Links to collections from your menu will appear here. [Learn more](https://archetypethemes.co/blogs/impulse/how-do-i-create-subcollections)"
      },
      {
        "type": "select",
        "id": "subcollection_style",
        "label": "Subcollection style",
        "default": "above",
        "options": [
          {
            "value": "above",
            "label": "Above products"
          },
          {
            "value": "below",
            "label": "Below products"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      },
      {
        "type": "range",
        "id": "subcollections_per_row",
        "label": "Subcollections per row",
        "default": 5,
        "min": 2,
        "max": 5,
        "step": 1
      },
      {
        "type": "header",
        "content": "Products"
      },
      {
        "type": "checkbox",
        "id": "enable_collection_count",
        "label": "Enable collection count",
        "default": true
      },
      {
        "type": "range",
        "id": "rows_per_page",
        "label": "Rows per page",
        "default": 7,
        "min": 4,
        "max": 20,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "mobile_flush_grid",
        "label": "Flush grid on mobile",
        "default": false
      }
    ]
  }
{% endschema %}
